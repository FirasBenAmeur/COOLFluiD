# Needs environmental variables
#   PARALUTION_DIR
# Sets
#   PARALUTION_INCLUDE_DIR
#   PARALUTION_LIBS
#   CF_HAVE_PARALUTION
#

SET_TRIAL_INCLUDE_PATH( "" )
ADD_TRIAL_INCLUDE_PATH( ${PARALUTION_DIR}/include )
ADD_TRIAL_INCLUDE_PATH( $ENV{PARALUTION_DIR}/include )
ADD_TRIAL_INCLUDE_PATH( $ENV{PARALUTION_DIR}/INSTALL/include )
ADD_TRIAL_INCLUDE_PATH( $ENV{PARALUTION_DIR}/install/include )
ADD_TRIAL_INCLUDE_PATH( ${PARALUTION_DIR}/inc )
ADD_TRIAL_INCLUDE_PATH( $ENV{PARALUTION_DIR}/inc )
ADD_TRIAL_INCLUDE_PATH( $ENV{PARALUTION_DIR}/INSTALL/inc )
ADD_TRIAL_INCLUDE_PATH( $ENV{PARALUTION_DIR}/install/inc )
ADD_TRIAL_INCLUDE_PATH( $ENV{PARALUTION_DIR}/src )

FIND_PATH( PARALUTION_INC_DIR paralution.hpp PATHS ${TRIAL_INCLUDE_PATHS} NO_DEFAULT_PATH )

LIST ( APPEND PARALUTION_INCLUDE_DIR ${PARALUTION_INC_DIR} )

SET_TRIAL_LIBRARY_PATH( "" )
ADD_TRIAL_LIBRARY_PATH( ${PARALUTION_DIR}/lib )
ADD_TRIAL_LIBRARY_PATH( $ENV{PARALUTION_DIR}/lib )
ADD_TRIAL_INCLUDE_PATH( $ENV{PARALUTION_DIR}/INSTALL/lib )
ADD_TRIAL_INCLUDE_PATH( $ENV{PARALUTION_DIR}/install/lib )

FIND_LIBRARY(PARALUTION_LIBRARY paralution ${TRIAL_LIBRARY_PATHS}  NO_DEFAULT_PATH)
FIND_LIBRARY(PARALUTION_LIBRARY paralution )

LIST ( APPEND PARALUTION_LIBRARIES ${PARALUTION_LIBRARY} )

IF(PARALUTION_INCLUDE_DIR AND PARALUTION_LIBRARIES)
  SET(CF_HAVE_PARALUTION 1 CACHE BOOL "Found Paralution library")
ELSE()
  SET(CF_HAVE_PARALUTION 0 CACHE BOOL "Not found Paralution library")
ENDIF()

MARK_AS_ADVANCED (
  PARALUTION_INCLUDE_DIR
  PARALUTION_LIBRARIES
  CF_HAVE_PARALUTION
  PARALUTION_BMAKE_DIR
  PARALUTION_INC_DIR
  PARALUTION_LIBRARY
)

LOG ( "CF_HAVE_PARALUTION: [${CF_HAVE_PARALUTION}]" )
IF(CF_HAVE_PARALUTION)
   LOG ( "  PARALUTION_INCLUDE_DIR: [${PARALUTION_INCLUDE_DIR}]" )
   LOG ( "  PARALUTION_LIBRARIES:   [${PARALUTION_LIBRARIES}]" )
ENDIF()
